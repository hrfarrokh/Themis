// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Themis.Infrastructure.Persistance;

#nullable disable

namespace Themis.Infrastructure.Persistance.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20220205201235_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ord")
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Themis.Application.OrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("StateCategory")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("TrackingCode")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Order", "ord");
                });

            modelBuilder.Entity("Themis.Application.OrderEntityMetadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Campaign")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LandingPageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrderPageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PrevDomainUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("PrevUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Referrer")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("OrderMetadata", "ord");
                });

            modelBuilder.Entity("Themis.Application.OrderEntity", b =>
                {
                    b.OwnsOne("Themis.Application.EfCustomer", "Customer", b1 =>
                        {
                            b1.Property<Guid>("OrderEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FullName")
                                .IsRequired()
                                .HasMaxLength(512)
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(512)");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasMaxLength(20)
                                .IsUnicode(false)
                                .HasColumnType("varchar(20)");

                            b1.HasKey("OrderEntityId");

                            b1.ToTable("Order", "ord");

                            b1.WithOwner()
                                .HasForeignKey("OrderEntityId");
                        });

                    b.OwnsOne("Themis.Application.EfCity", "City", b1 =>
                        {
                            b1.Property<Guid>("OrderEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasMaxLength(128)
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(128)");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasMaxLength(128)
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(128)");

                            b1.HasKey("OrderEntityId");

                            b1.ToTable("Order", "ord");

                            b1.WithOwner()
                                .HasForeignKey("OrderEntityId");
                        });

                    b.OwnsOne("Themis.Application.EfAudit", "Creation", b1 =>
                        {
                            b1.Property<Guid>("OrderEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset>("TimeStamp")
                                .HasColumnType("datetimeoffset");

                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Username")
                                .IsRequired()
                                .HasMaxLength(128)
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(128)");

                            b1.HasKey("OrderEntityId");

                            b1.ToTable("Order", "ord");

                            b1.WithOwner()
                                .HasForeignKey("OrderEntityId");
                        });

                    b.OwnsOne("Themis.Application.EfAudit", "Modification", b1 =>
                        {
                            b1.Property<Guid>("OrderEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset>("TimeStamp")
                                .HasColumnType("datetimeoffset");

                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Username")
                                .IsRequired()
                                .HasMaxLength(128)
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(128)");

                            b1.HasKey("OrderEntityId");

                            b1.ToTable("Order", "ord");

                            b1.WithOwner()
                                .HasForeignKey("OrderEntityId");
                        });

                    b.OwnsOne("Themis.Application.OrderEntityItem", "Item", b1 =>
                        {
                            b1.Property<Guid>("OrderEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("TotalAmount")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("OrderEntityId");

                            b1.ToTable("Order", "ord");

                            b1.WithOwner()
                                .HasForeignKey("OrderEntityId");

                            b1.OwnsOne("Themis.Application.EfAppointment", "Appointment", b2 =>
                                {
                                    b2.Property<Guid>("OrderEntityItemOrderEntityId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<DateTimeOffset>("From")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<DateTimeOffset>("To")
                                        .HasColumnType("datetimeoffset");

                                    b2.HasKey("OrderEntityItemOrderEntityId");

                                    b2.ToTable("Order", "ord");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderEntityItemOrderEntityId");
                                });

                            b1.OwnsOne("Themis.Application.EfInventoryItem", "InventoryItem", b2 =>
                                {
                                    b2.Property<Guid>("OrderEntityItemOrderEntityId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("FullName")
                                        .IsRequired()
                                        .HasMaxLength(512)
                                        .IsUnicode(true)
                                        .HasColumnType("nvarchar(512)");

                                    b2.Property<long>("Id")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("Mileage")
                                        .HasColumnType("int");

                                    b2.Property<decimal>("Price")
                                        .HasPrecision(18, 2)
                                        .HasColumnType("decimal(18,2)");

                                    b2.HasKey("OrderEntityItemOrderEntityId");

                                    b2.ToTable("Order", "ord");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderEntityItemOrderEntityId");

                                    b2.OwnsOne("Themis.Application.EfCar", "Car", b3 =>
                                        {
                                            b3.Property<Guid>("EfInventoryItemOrderEntityItemOrderEntityId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("Brand")
                                                .IsRequired()
                                                .HasMaxLength(128)
                                                .IsUnicode(true)
                                                .HasColumnType("nvarchar(128)");

                                            b3.Property<string>("Color")
                                                .IsRequired()
                                                .HasMaxLength(128)
                                                .IsUnicode(true)
                                                .HasColumnType("nvarchar(128)");

                                            b3.Property<string>("Generation")
                                                .IsRequired()
                                                .HasMaxLength(128)
                                                .IsUnicode(true)
                                                .HasColumnType("nvarchar(128)");

                                            b3.Property<int>("Id")
                                                .HasColumnType("int");

                                            b3.Property<string>("Model")
                                                .IsRequired()
                                                .HasMaxLength(128)
                                                .IsUnicode(true)
                                                .HasColumnType("nvarchar(128)");

                                            b3.Property<string>("Type")
                                                .IsRequired()
                                                .HasMaxLength(128)
                                                .IsUnicode(true)
                                                .HasColumnType("nvarchar(128)");

                                            b3.Property<int>("Year")
                                                .HasColumnType("int");

                                            b3.HasKey("EfInventoryItemOrderEntityItemOrderEntityId");

                                            b3.ToTable("Order", "ord");

                                            b3.WithOwner()
                                                .HasForeignKey("EfInventoryItemOrderEntityItemOrderEntityId");
                                        });

                                    b2.OwnsOne("Themis.Application.EfCity", "City", b3 =>
                                        {
                                            b3.Property<Guid>("EfInventoryItemOrderEntityItemOrderEntityId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("District")
                                                .IsRequired()
                                                .HasMaxLength(128)
                                                .IsUnicode(true)
                                                .HasColumnType("nvarchar(128)");

                                            b3.Property<int>("Id")
                                                .HasColumnType("int");

                                            b3.Property<string>("Title")
                                                .IsRequired()
                                                .HasMaxLength(128)
                                                .IsUnicode(true)
                                                .HasColumnType("nvarchar(128)");

                                            b3.HasKey("EfInventoryItemOrderEntityItemOrderEntityId");

                                            b3.ToTable("Order", "ord");

                                            b3.WithOwner()
                                                .HasForeignKey("EfInventoryItemOrderEntityItemOrderEntityId");
                                        });

                                    b2.Navigation("Car");

                                    b2.Navigation("City");
                                });

                            b1.OwnsOne("Themis.Application.EfPackage", "Package", b2 =>
                                {
                                    b2.Property<Guid>("OrderEntityItemOrderEntityId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .HasColumnType("int");

                                    b2.Property<decimal>("Price")
                                        .HasColumnType("decimal(18,2)");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasMaxLength(128)
                                        .IsUnicode(true)
                                        .HasColumnType("nvarchar(128)");

                                    b2.HasKey("OrderEntityItemOrderEntityId");

                                    b2.ToTable("Order", "ord");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderEntityItemOrderEntityId");
                                });

                            b1.Navigation("Appointment");

                            b1.Navigation("InventoryItem");

                            b1.Navigation("Package");
                        });

                    b.Navigation("City");

                    b.Navigation("Creation")
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Item");

                    b.Navigation("Modification")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
